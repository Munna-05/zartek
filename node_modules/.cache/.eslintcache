[{"/Users/amalp.k/Desktop/zarTek/client/src/index.js":"1","/Users/amalp.k/Desktop/zarTek/client/src/App.js":"2","/Users/amalp.k/Desktop/zarTek/client/src/reportWebVitals.js":"3","/Users/amalp.k/Desktop/zarTek/client/src/Pages/Home.js":"4","/Users/amalp.k/Desktop/zarTek/client/src/Components/Navbar.jsx":"5","/Users/amalp.k/Desktop/zarTek/client/src/Pages/Items.js":"6","/Users/amalp.k/Desktop/zarTek/client/src/Components/Categories.jsx":"7","/Users/amalp.k/Desktop/zarTek/client/src/Components/FoodItems.jsx":"8"},{"size":524,"mtime":1666472205294,"results":"9","hashOfConfig":"10"},{"size":322,"mtime":1666426108217,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1666425785187,"results":"12","hashOfConfig":"10"},{"size":942,"mtime":1666472285423,"results":"13","hashOfConfig":"10"},{"size":566,"mtime":1666554717130,"results":"14","hashOfConfig":"10"},{"size":203,"mtime":1666471276144,"results":"15","hashOfConfig":"10"},{"size":1703,"mtime":1666518736146,"results":"16","hashOfConfig":"10"},{"size":4073,"mtime":1666556000072,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16ers75",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/Users/amalp.k/Desktop/zarTek/client/src/index.js",[],[],"/Users/amalp.k/Desktop/zarTek/client/src/App.js",[],[],"/Users/amalp.k/Desktop/zarTek/client/src/reportWebVitals.js",[],[],"/Users/amalp.k/Desktop/zarTek/client/src/Pages/Home.js",[],[],"/Users/amalp.k/Desktop/zarTek/client/src/Components/Navbar.jsx",[],[],[],"/Users/amalp.k/Desktop/zarTek/client/src/Pages/Items.js",[],[],"/Users/amalp.k/Desktop/zarTek/client/src/Components/Categories.jsx",["44"],[],"/Users/amalp.k/Desktop/zarTek/client/src/Components/FoodItems.jsx",["45","46"],[],"import React, { useEffect, useState } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion';\n\n\nconst FoodItems = ({ dishes, state }) => {\n    let [counter, setCounter] = useState(0)\n    let result = [...dishes]\n\n    let [cart, setCart] = useState([])\n    \n   useEffect(()=>{\n    console.log('page changed')\n        setCart([])\n   },[state])\n\n    //add function\n    const add = (index) => {\n        let data = {\n            index: index,\n            dishes:result,\n            quantity: counter + 1\n        }\n\n        let exist = cart.find((item) => item.index === index)\n        if (exist) {\n        console.log(cart)\n\n            setCart(\n                cart.map((item) =>\n                    item.index === index\n                        ?\n                        { ...exist, quantity: exist.quantity + 1 }\n                        :\n                        item\n                )\n            )\n        } else {\n            setCart([...cart, data])\n        }\n\n    }\n\n\n\n    // remove function\n    const remove = (index) => {\n        let result = [...dishes]\n        let data = {\n            index: index,\n            dishes:dishes,\n            quantity: counter - 1\n        }\n\n        let exist = cart.find((item) => item.index === index)\n        if (exist) {\n            console.log(exist)\n            setCart(\n                cart.map((item) =>\n                    item.index === index\n                        ?\n                        { ...exist, quantity: exist.quantity ===0? exist.quantity = 0 : exist.quantity - 1 }\n                        :\n                        item\n                )\n            )\n        } else {\n            setCart([...cart, data])\n        }\n\n    }\n\n    return (\n        <AnimatePresence>\n\n\n            <motion.div className=''\n\n            >\n                {dishes ? dishes.map((result, index) => {\n                    return (\n                        <>\n                            <div className='border h-fit flex justify-between'>\n                                <div className='px-4 ml-6 text-left my-auto'>\n                                    <label className='font-bold' htmlFor=\"\">{result.dish_name}</label><br />\n                                    <div className='text-left ' style={{ width: \"50vw\" }}>\n                                        <label htmlFor=\"\">{result.dish_currency} {result.dish_price}</label><br />\n                                        <label className='text-slate-500' htmlFor=\"\">{result.dish_description}</label>\n                                        <div className='my-2'>\n                                            <button onClick={remove.bind(this, index)} className='w-10 bg-green-600 px-6 h-10 text-white rounded-l-full'>-</button>\n                                          \n                                                < button className='w-fit bg-green-600 text-white h-10'>{cart.map((items)=>items.index === index \n                                                && items.dishes.find(item=>item.dish_name === result.dish_name)\n                                                ? items.quantity : null )}</button>\n  \n                                            <button onClick={add.bind(this, index)} className='w-10 bg-green-600 text-white px-6 h-10 pr-7 rounded-r-full'>+</button>\n\n                                        </div>\n                                        {result.addonCat.length > 0 ? <span className='text-sm text-red-600'>Customization available</span> : null}\n                                    </div>\n                                </div>\n                                <span className='my-auto'>{result.dish_calories} calories</span>\n                                <div className='h-40 m-5 w-40 mr-5 rounded-md overflow-hidden' style={{ backgroundImage: \"url(\" + result.dish_image + \")\", backgroundSize: \"cover\" }}>\n                                </div>\n                            </div>\n                        </>\n                    )\n                }) : null}\n            </motion.div>\n        </AnimatePresence >\n    )\n}\n\nexport default FoodItems",{"ruleId":"47","severity":1,"message":"48","line":6,"column":19,"nodeType":"49","messageId":"50","endLine":6,"endColumn":27},{"ruleId":"47","severity":1,"message":"51","line":6,"column":19,"nodeType":"49","messageId":"50","endLine":6,"endColumn":29},{"ruleId":"47","severity":1,"message":"52","line":47,"column":13,"nodeType":"49","messageId":"50","endLine":47,"endColumn":19},"no-unused-vars","'setStyle' is assigned a value but never used.","Identifier","unusedVar","'setCounter' is assigned a value but never used.","'result' is assigned a value but never used."]